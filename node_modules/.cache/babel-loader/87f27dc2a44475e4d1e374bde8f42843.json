{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js\",\n    _s = $RefreshSig$();\n\nimport { async } from 'q';\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport HandleCreatePost from '../helpers/HandleCreatePost';\nimport SendMessage from './SendMessage';\nimport DummyStatement from './DummyStatement';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const token = localStorage.getItem(\"userToken\");\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'Application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(result => {\n        console.log(result.data.posts);\n        setPosts(result.data.posts);\n      }).catch(console.error);\n    };\n\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"title-Addpost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"post-title\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/posts/add\",\n          className: \"addlink\",\n          children: \"Add Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main\",\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/posts/add\",\n          children: /*#__PURE__*/_jsxDEV(HandleCreatePost, {\n            posts: posts,\n            setPosts: setPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: post._id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Price: \", post.price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Seller: \", post.author.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Location: \", post.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: post.isAuthor ? true : false,\n          onClick: () => /*#__PURE__*/_jsxDEV(SendMessage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 78\n          }, this),\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 116\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 125\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(AuthenticatedPosts, \"//5BH53w6KCEDLxGyEC6NSTZD30=\");\n\n_c = AuthenticatedPosts;\nexport default AuthenticatedPosts; // import handleViewPost from '../helpers/handleViewPost';\n// const AuthenticatedPosts = async({posts, setPosts}) => {\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\n//         .then(response => response.json())\n//         .then(result => {\n//         console.log(result.data.posts);\n//         setPosts(result.data.posts);\n//       })\n//       .catch(console.error);\n//       return (\n//         <>\n//           <h1>Posts</h1>\n//           <button type=\"button\" className=\"add-Btn\"\n//            onClick={handleAddPost}>Add Post</button>\n//           {\n//             posts.map(post => <div key={post._id}>  \n//               <h3>{post.title}</h3>\n//               <h3>{post.description}</h3>\n//               <h3>Price: {post.price}</h3>\n//               <h3>Seller: {post.author.username}</h3>\n//               <h3>Location: {post.location}</h3>\n//             </div>)\n//           }\n//         </>\n//       )  \n// }\n//   const handleAddPost = () => {\n//     // const [posts, setPosts] = useState([]);\n//     const [title, setTitle] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [location, setLocation] = useState(\"\");\n//     const [willDeliver, setWillDeliver] = useState(false);\n// const postSubmit = async () => {\n//   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'Application/json',\n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\n//   },\n//   body: JSON.stringify({\n//     post: { // Is this right?\n//         title: title,\n//         description: description,\n//         price: price,\n//         location: location\n//           }\n//   })\n// });\n// const result = await response.json();\n// const data_Posts = result.data.posts;\n// setPosts(data_Posts);\n// // View button here\n// <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \n// }\n//     return (\n//       <>\n//         <h3>Create Post</h3>\n//         <form onSubmit={postSubmit}>\n//           <input type=\"text\" placeholder = \"title\" value={title}\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \n//           <input type=\"text\" placeholder = \"description\" value={description}\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \n//           <input type=\"text\" placeholder = \"price\" value={price}\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\n//           <input type=\"text\" placeholder = \"location\" value={location}\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\n//           <input type=\"checkbox\" value=\"Deliver\"\n//            onClick = {() => setWillDeliver(true)}></input>\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \n//         </form>\n//       </>\n//     )\n//   }\n// export default AuthenticatedPosts;  \n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedPosts\");","map":{"version":3,"sources":["/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js"],"names":["async","React","useState","useEffect","BrowserRouter","Route","Link","HandleCreatePost","SendMessage","DummyStatement","AuthenticatedPosts","posts","setPosts","postId","setPostId","token","localStorage","getItem","fetchPosts","response","fetch","method","headers","then","json","result","console","log","data","catch","error","map","post","title","_id","description","price","author","username","location","isAuthor"],"mappings":"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","sourcesContent":["import { async } from 'q';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport HandleCreatePost from '../helpers/HandleCreatePost';\r\nimport SendMessage from './SendMessage';\r\nimport DummyStatement from './DummyStatement';\r\n\r\n\r\n\r\n\r\nconst AuthenticatedPosts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const[postId, setPostId] = useState(\"\");\r\n    const token = localStorage.getItem(\"userToken\")\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n\r\n            const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'Application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n               \r\n            }).then(response => response.json())\r\n              .then(result => {\r\n               console.log(result.data.posts);\r\n               setPosts(result.data.posts);\r\n            })\r\n            .catch(console.error);\r\n\r\n        }\r\n        fetchPosts();\r\n    }, [])\r\n\r\n    \r\n      return (\r\n        <>\r\n        <BrowserRouter>\r\n            <div id=\"title-Addpost\">\r\n\r\n                <h1 id=\"post-title\">Posts</h1>\r\n                <Link to =\"/posts/add\" className=\"addlink\">Add Post</Link>\r\n\r\n            </div>\r\n\r\n            <div id=\"main\">\r\n                <Route path=\"/posts/add\">\r\n                    <HandleCreatePost posts={posts} setPosts={setPosts}/>\r\n                </Route>\r\n            </div>\r\n\r\n          {\r\n            posts.map((post) => (\r\n\r\n            <div key={post._id}>  \r\n              <h2>{post.title}</h2> \r\n              <h2>{post._id}</h2>\r\n              <p>{post.description}</p>\r\n              <h3>Price: {post.price}</h3>\r\n              <h3>Seller: {post.author.username}</h3>\r\n              <h3>Location: {post.location}</h3>\r\n              {/* <h3>{post.createdAt}</h3>\r\n              <h3>{post.updatedAt}</h3> */}\r\n\r\n              \r\n              <button disabled={post.isAuthor ? true : false} onClick={() => <SendMessage />}>Send Message</button><br></br><br></br>\r\n              \r\n              {/* {\r\n                postId.length ? <SendMessage postId={postId} setPostId={setPostId} /> : <DummyStatement />\r\n              } */}\r\n              \r\n            </div>)\r\n            )}\r\n\r\n            \r\n\r\n</BrowserRouter>\r\n        </>\r\n      )  \r\n    \r\n}\r\n\r\n  export default AuthenticatedPosts;\r\n\r\n\r\n// import handleViewPost from '../helpers/handleViewPost';\r\n\r\n// const AuthenticatedPosts = async({posts, setPosts}) => {\r\n    \r\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n//         .then(response => response.json())\r\n//         .then(result => {\r\n//         console.log(result.data.posts);\r\n//         setPosts(result.data.posts);\r\n//       })\r\n//       .catch(console.error);\r\n    \r\n//       return (\r\n//         <>\r\n//           <h1>Posts</h1>\r\n          \r\n  \r\n//           <button type=\"button\" className=\"add-Btn\"\r\n//            onClick={handleAddPost}>Add Post</button>\r\n//           {\r\n//             posts.map(post => <div key={post._id}>  \r\n//               <h3>{post.title}</h3>\r\n//               <h3>{post.description}</h3>\r\n//               <h3>Price: {post.price}</h3>\r\n//               <h3>Seller: {post.author.username}</h3>\r\n//               <h3>Location: {post.location}</h3>\r\n\r\n    \r\n//             </div>)\r\n//           }\r\n//         </>\r\n//       )  \r\n    \r\n// }\r\n\r\n\r\n\r\n//   const handleAddPost = () => {\r\n//     // const [posts, setPosts] = useState([]);\r\n//     const [title, setTitle] = useState(\"\");\r\n//     const [description, setDescription] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [location, setLocation] = useState(\"\");\r\n//     const [willDeliver, setWillDeliver] = useState(false);\r\n  \r\n  \r\n    // const postSubmit = async () => {\r\n    //   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'Application/json',\r\n    //     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     post: { // Is this right?\r\n    //         title: title,\r\n    //         description: description,\r\n    //         price: price,\r\n    //         location: location\r\n    //           }\r\n    //   })\r\n    // });\r\n    // const result = await response.json();\r\n    // const data_Posts = result.data.posts;\r\n    \r\n    // setPosts(data_Posts);\r\n\r\n    // // View button here\r\n    // <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \r\n  \r\n    // }\r\n//     return (\r\n//       <>\r\n//         <h3>Create Post</h3>\r\n  \r\n//         <form onSubmit={postSubmit}>\r\n//           <input type=\"text\" placeholder = \"title\" value={title}\r\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \r\n  \r\n//           <input type=\"text\" placeholder = \"description\" value={description}\r\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \r\n  \r\n//           <input type=\"text\" placeholder = \"price\" value={price}\r\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\r\n  \r\n//           <input type=\"text\" placeholder = \"location\" value={location}\r\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\r\n  \r\n//           <input type=\"checkbox\" value=\"Deliver\"\r\n//            onClick = {() => setWillDeliver(true)}></input>\r\n  \r\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\r\n  \r\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \r\n  \r\n//         </form>\r\n//       </>\r\n//     )\r\n//   }\r\n\r\n// export default AuthenticatedPosts;  \r\n  "]},"metadata":{},"sourceType":"module"}