{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\nimport HandleCreatePost from '../helpers/HandleCreatePost';\nimport SendMessage from './SendMessage';\nimport Profile from './Profile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [postId, setPostId] = useState(\"\");\n  const [searchTerm, SetSearchTerm] = useState(\"\");\n  console.log(searchTerm);\n  const token = localStorage.getItem(\"userToken\");\n\n  function postMatches(post, text) {\n    post.title.toLowerCase().includes(text.toLowerCase());\n  }\n\n  const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : posts;\n\n  const handleDelete = async postIdToDelete => {\n    const response = await fetch(`https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts/${postIdToDelete}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'Application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => response.json()).then(result => {\n      console.log(result);\n\n      if (result) {\n        const newPosts = posts.filter(post => post._id !== postIdToDelete);\n        setPosts(newPosts);\n      } // let allThePosts = posts;\n      // let deleteMessages = result;\n      // for(let i = 0; i < allThePosts.length; i++) {\n      //     if(allThePosts[i]._id === postIdToDelete) {\n      //         allThePosts[i].messages = deleteMessages\n      //     }\n      // }\n      //  setPosts(allThePosts);  // I can delete post but its not re-rendering...?\n\n    }).catch(console.error);\n  };\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'Application/json',\n          'Authorization': `Bearer ${token}`\n        }\n      }).then(response => response.json()).then(result => {\n        console.log(result.data.posts);\n        setPosts(result.data.posts); //    setPosts(result.data.posts);\n      }).catch(console.error);\n    };\n\n    fetchPosts();\n  }, []); // 1. ap - fetchPost() -> latest posts\n  // 2. cp - addPost() -> ??? -> useEffect -> fetchPost()\n  // 3. ap - rerender all your posts\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"title-Addpost\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        id: \"post-title\",\n        children: \"Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search Post...\",\n        value: searchTerm,\n        onChange: event => SetSearchTerm(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/posts/add\",\n        className: \"addlink\",\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/posts/add\",\n        children: /*#__PURE__*/_jsxDEV(HandleCreatePost, {\n          posts: posts,\n          setPosts: setPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Price: \", post.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Seller: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: post.isAuthor ? true : false,\n        className: \"sendMessage\",\n        onClick: () => setPostId(post._id),\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: post.isAuthor ? false : true,\n        className: \"delete-btn\",\n        onClick: () => handleDelete(post._id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }, this), postId.length ? /*#__PURE__*/_jsxDEV(SendMessage, {\n        posts: posts,\n        setPosts: setPosts,\n        postId: postId,\n        setPostId: setPostId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 37\n      }, this) : \"\"]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)), postsToDisplay.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Price: \", post.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Seller: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 27\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 23\n    }, this))]\n  }, void 0, true);\n};\n\n_s(AuthenticatedPosts, \"A6os0DhQSzph4GTOyydkxkyqspo=\");\n\n_c = AuthenticatedPosts;\nexport default AuthenticatedPosts; // import handleViewPost from '../helpers/handleViewPost';\n// const AuthenticatedPosts = async({posts, setPosts}) => {\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\n//         .then(response => response.json())\n//         .then(result => {\n//         console.log(result.data.posts);\n//         setPosts(result.data.posts);\n//       })\n//       .catch(console.error);\n//       return (\n//         <>\n//           <h1>Posts</h1>\n//           <button type=\"button\" className=\"add-Btn\"\n//            onClick={handleAddPost}>Add Post</button>\n//           {\n//             posts.map(post => <div key={post._id}>  \n//               <h3>{post.title}</h3>\n//               <h3>{post.description}</h3>\n//               <h3>Price: {post.price}</h3>\n//               <h3>Seller: {post.author.username}</h3>\n//               <h3>Location: {post.location}</h3>\n//             </div>)\n//           }\n//         </>\n//       )  \n// }\n//   const handleAddPost = () => {\n//     // const [posts, setPosts] = useState([]);\n//     const [title, setTitle] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [location, setLocation] = useState(\"\");\n//     const [willDeliver, setWillDeliver] = useState(false);\n// const postSubmit = async () => {\n//   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'Application/json',\n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\n//   },\n//   body: JSON.stringify({\n//     post: { // Is this right?\n//         title: title,\n//         description: description,\n//         price: price,\n//         location: location\n//           }\n//   })\n// });\n// const result = await response.json();\n// const data_Posts = result.data.posts;\n// setPosts(data_Posts);\n// // View button here\n// <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \n// }\n//     return (\n//       <>\n//         <h3>Create Post</h3>\n//         <form onSubmit={postSubmit}>\n//           <input type=\"text\" placeholder = \"title\" value={title}\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \n//           <input type=\"text\" placeholder = \"description\" value={description}\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \n//           <input type=\"text\" placeholder = \"price\" value={price}\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\n//           <input type=\"text\" placeholder = \"location\" value={location}\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\n//           <input type=\"checkbox\" value=\"Deliver\"\n//            onClick = {() => setWillDeliver(true)}></input>\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \n//         </form>\n//       </>\n//     )\n//   }\n// export default AuthenticatedPosts;  \n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedPosts\");","map":{"version":3,"sources":["/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Link","HandleCreatePost","SendMessage","Profile","AuthenticatedPosts","posts","setPosts","postId","setPostId","searchTerm","SetSearchTerm","console","log","token","localStorage","getItem","postMatches","post","text","title","toLowerCase","includes","filteredPosts","filter","postsToDisplay","length","handleDelete","postIdToDelete","response","fetch","method","headers","then","json","result","newPosts","_id","catch","error","fetchPosts","data","event","target","value","map","description","price","author","username","location","isAuthor"],"mappings":"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","sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\r\nimport HandleCreatePost from '../helpers/HandleCreatePost';\r\nimport SendMessage from './SendMessage';\r\nimport Profile from './Profile';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst AuthenticatedPosts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const[postId, setPostId] = useState(\"\");\r\n    const [searchTerm, SetSearchTerm] = useState(\"\");\r\n\r\n    console.log(searchTerm);\r\n\r\n    const token = localStorage.getItem(\"userToken\")\r\n\r\n    function postMatches(post, text) {\r\n        post.title.toLowerCase().includes(text.toLowerCase())\r\n    }\r\n\r\n    const filteredPosts = posts.filter(post => postMatches(post, searchTerm));\r\n    const postsToDisplay = searchTerm.length ? filteredPosts : posts;\r\n\r\n    const handleDelete = async(postIdToDelete) => {\r\n        const response= await fetch(`https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts/${postIdToDelete}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n            'Content-Type': 'Application/json',\r\n            'Authorization' : `Bearer ${token}`\r\n        }\r\n        }).then(response => response.json())\r\n          .then(result => {\r\n            console.log(result);\r\n            \r\n            if (result) {\r\n                const newPosts = posts.filter(post => post._id !== postIdToDelete);\r\n                setPosts(newPosts)\r\n            }\r\n\r\n            // let allThePosts = posts;\r\n            // let deleteMessages = result;\r\n\r\n                // for(let i = 0; i < allThePosts.length; i++) {\r\n                //     if(allThePosts[i]._id === postIdToDelete) {\r\n                //         allThePosts[i].messages = deleteMessages\r\n                //     }\r\n                // }\r\n                //  setPosts(allThePosts);  // I can delete post but its not re-rendering...?\r\n        })\r\n        .catch(console.error); \r\n\r\n        \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n\r\n            const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'Application/json',\r\n                    'Authorization': `Bearer ${token}`\r\n                },\r\n               \r\n            }).then(response => response.json())\r\n              .then(result => {\r\n               console.log(result.data.posts);\r\n               setPosts(result.data.posts);\r\n            //    setPosts(result.data.posts);\r\n            })\r\n            .catch(console.error);\r\n\r\n        }\r\n        fetchPosts();\r\n    }, [])\r\n\r\n    // 1. ap - fetchPost() -> latest posts\r\n    // 2. cp - addPost() -> ??? -> useEffect -> fetchPost()\r\n    // 3. ap - rerender all your posts\r\n \r\n      return (\r\n        <>\r\n        \r\n            <div id=\"title-Addpost\">\r\n\r\n                <h1 id=\"post-title\">Posts</h1>\r\n\r\n                <input type=\"text\" placeholder=\"Search Post...\" value={searchTerm}\r\n                 onChange = {(event) => SetSearchTerm(event.target.value)}></input>\r\n\r\n                <Link to =\"/posts/add\" className=\"addlink\">Add Post</Link>\r\n                \r\n\r\n            </div>\r\n\r\n            <div id=\"main\">\r\n                <Route path=\"/posts/add\">\r\n                    <HandleCreatePost posts={posts} setPosts={setPosts}/>\r\n                </Route>\r\n\r\n                \r\n            </div>\r\n\r\n\r\n          {\r\n              \r\n            posts.map((post) => (\r\n\r\n            <div key={post._id}>  \r\n              <h2>{post.title}</h2> \r\n              <p>{post.description}</p>\r\n              <h3>Price: {post.price}</h3>\r\n              <h3>Seller: {post.author.username}</h3>\r\n              <h3>Location: {post.location}</h3>\r\n\r\n\r\n\r\n              {/* <h3>Message: {post.messages}</h3> */}\r\n              {/* <h3>{post.createdAt}</h3>\r\n              <h3>{post.updatedAt}</h3> */}\r\n\r\n              \r\n              <button disabled={post.isAuthor ? true : false} className=\"sendMessage\" onClick={() => setPostId(post._id)}>Send Message</button>\r\n\r\n              <button disabled={post.isAuthor ? false : true} className=\"delete-btn\" onClick={() => handleDelete(post._id)}>Delete</button>\r\n\r\n\r\n\r\n              {\r\n                  \r\n                    postId.length ? <SendMessage posts={posts} setPosts={setPosts} postId={postId} setPostId={setPostId} /> : \"\"\r\n              }\r\n  \r\n              \r\n            </div>)\r\n            )}\r\n\r\n              {\r\n                  postsToDisplay.map((post) => (\r\n                      <div key={post._id}>\r\n                          <h2>{post.title}</h2>\r\n                          <p>{post.description}</p>\r\n                          <h3>Price: {post.price}</h3>\r\n                          <h3>Seller: {post.author.username}</h3>\r\n                          <h3>Location: {post.location}</h3>\r\n                      </div>\r\n                  ))\r\n\r\n              }\r\n\r\n                {/* <SendMessage posts={posts} setPosts={setPosts} postId={postId} setPostId={setPostId} /> */}\r\n            \r\n\r\n\r\n        </>\r\n      )  \r\n    \r\n}\r\n\r\n  export default AuthenticatedPosts;\r\n\r\n\r\n// import handleViewPost from '../helpers/handleViewPost';\r\n\r\n// const AuthenticatedPosts = async({posts, setPosts}) => {\r\n    \r\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n//         .then(response => response.json())\r\n//         .then(result => {\r\n//         console.log(result.data.posts);\r\n//         setPosts(result.data.posts);\r\n//       })\r\n//       .catch(console.error);\r\n    \r\n//       return (\r\n//         <>\r\n//           <h1>Posts</h1>\r\n          \r\n  \r\n//           <button type=\"button\" className=\"add-Btn\"\r\n//            onClick={handleAddPost}>Add Post</button>\r\n//           {\r\n//             posts.map(post => <div key={post._id}>  \r\n//               <h3>{post.title}</h3>\r\n//               <h3>{post.description}</h3>\r\n//               <h3>Price: {post.price}</h3>\r\n//               <h3>Seller: {post.author.username}</h3>\r\n//               <h3>Location: {post.location}</h3>\r\n\r\n    \r\n//             </div>)\r\n//           }\r\n//         </>\r\n//       )  \r\n    \r\n// }\r\n\r\n\r\n\r\n//   const handleAddPost = () => {\r\n//     // const [posts, setPosts] = useState([]);\r\n//     const [title, setTitle] = useState(\"\");\r\n//     const [description, setDescription] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [location, setLocation] = useState(\"\");\r\n//     const [willDeliver, setWillDeliver] = useState(false);\r\n  \r\n  \r\n    // const postSubmit = async () => {\r\n    //   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'Application/json',\r\n    //     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     post: { // Is this right?\r\n    //         title: title,\r\n    //         description: description,\r\n    //         price: price,\r\n    //         location: location\r\n    //           }\r\n    //   })\r\n    // });\r\n    // const result = await response.json();\r\n    // const data_Posts = result.data.posts;\r\n    \r\n    // setPosts(data_Posts);\r\n\r\n    // // View button here\r\n    // <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \r\n  \r\n    // }\r\n//     return (\r\n//       <>\r\n//         <h3>Create Post</h3>\r\n  \r\n//         <form onSubmit={postSubmit}>\r\n//           <input type=\"text\" placeholder = \"title\" value={title}\r\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \r\n  \r\n//           <input type=\"text\" placeholder = \"description\" value={description}\r\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \r\n  \r\n//           <input type=\"text\" placeholder = \"price\" value={price}\r\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\r\n  \r\n//           <input type=\"text\" placeholder = \"location\" value={location}\r\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\r\n  \r\n//           <input type=\"checkbox\" value=\"Deliver\"\r\n//            onClick = {() => setWillDeliver(true)}></input>\r\n  \r\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\r\n  \r\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \r\n  \r\n//         </form>\r\n//       </>\r\n//     )\r\n//   }\r\n\r\n// export default AuthenticatedPosts;  \r\n  "]},"metadata":{},"sourceType":"module"}