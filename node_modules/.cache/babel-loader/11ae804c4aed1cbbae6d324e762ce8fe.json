{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/Strangers.Things/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst RegisterForm = () => {\n  _s();\n\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmation, setConfirmation] = useState(\"\");\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmation) {\n      alert(\"Password doesn't match\");\n      setPassword(\"\");\n      setConfirmation(\"\");\n    } else {\n      const response = fetch('https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'Application/json'\n        },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      }).then(response => response.json()).then(result => {\n        console.log(result);\n        const token = result.data.token;\n        localStorage.setItem(\"userToken\", token);\n      }).catch(console.error);\n      setUserName(\"\");\n      setPassword(\"\");\n      setConfirmation(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"register\",\n      children: \"Register Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        value: username,\n        className: \"signupUsername\",\n        onChange: event => {\n          setUserName(event.target.value);\n        },\n        minLength: 4,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        className: \"signupPassword\",\n        onChange: event => {\n          setPassword(event.target.value);\n        },\n        minLength: 6,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password Confirmation\",\n        value: confirmation,\n        className: \"signupconfPassword\",\n        onChange: event => setConfirmation(event.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-Btn\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(RegisterForm, \"543UYrRQu04Z3RW89T0kmnaNfhA=\");\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"sources":["/home/mayankawasthi/Strangers.Things/src/components/RegisterForm.js"],"names":["React","useState","RegisterForm","username","setUserName","password","setPassword","confirmation","setConfirmation","handleSubmit","event","preventDefault","alert","response","fetch","method","headers","body","JSON","stringify","user","then","json","result","console","log","token","data","localStorage","setItem","catch","error","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst RegisterForm = () => {\r\n    const [username, setUserName] = useState(\"\"); \r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmation, setConfirmation] = useState(\"\");\r\n    \r\n\r\n    const handleSubmit = async(event) => {\r\n        event.preventDefault();\r\n\r\n        if (password !== confirmation) {\r\n            alert (\"Password doesn't match\")\r\n            setPassword(\"\")\r\n            setConfirmation(\"\")\r\n        } else {\r\n            const response = fetch('https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/users/register', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type' : 'Application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    user: {\r\n                        username: username,\r\n                        password: password\r\n                    }\r\n                })\r\n            }).then (response => response.json())\r\n              .then (result => {\r\n                  console.log(result);\r\n                  const token = result.data.token;\r\n                  localStorage.setItem(\"userToken\", token)\r\n              })\r\n              .catch(console.error);\r\n            \r\n            setUserName(\"\");\r\n            setPassword(\"\");\r\n            setConfirmation(\"\");\r\n\r\n        }\r\n    \r\n    }\r\n    return (\r\n        <>\r\n            <h1 id=\"register\">Register Form</h1>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input type = \"text\" placeholder = \"Username\"\r\n                 value={username} className=\"signupUsername\"\r\n                 onChange = {(event) => {setUserName(event.target.value)}}\r\n                 minLength={4} required>\r\n                </input>\r\n\r\n                <input type = \"password\" placeholder = \"Password\"\r\n                 value={password} className=\"signupPassword\"\r\n                 onChange = {(event) => {setPassword(event.target.value)}}\r\n                  minLength={6} required>\r\n                </input>\r\n\r\n                <input type = \"password\" placeholder = \"Password Confirmation\"\r\n                 value={confirmation} className=\"signupconfPassword\"\r\n                 onChange = {(event) => setConfirmation(event.target.value)}\r\n                 required>\r\n                 </input>\r\n\r\n                 <br></br><br></br>\r\n\r\n                 <button type = \"submit\" className = \"submit-Btn\">Submit</button>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterForm;"]},"metadata":{},"sourceType":"module"}