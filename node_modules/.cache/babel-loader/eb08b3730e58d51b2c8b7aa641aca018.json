{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedPosts = () => {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\").then(response => response.json()).then(result => {\n        console.log(result);\n      }).catch(console.error); // const result = await response.json();\n      // console.log(result.data.posts);\n\n      setPosts(result.data.posts);\n    };\n\n    fetchPost();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.location\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.willDeliver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.active\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author._id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.author.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.cohort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.price\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.createdAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.updatedAt\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post._v\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.isAuthor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 18\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_s(AuthenticatedPosts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n\n_c = AuthenticatedPosts;\nexport default AuthenticatedPosts; // import handleViewPost from '../helpers/handleViewPost';\n// const AuthenticatedPosts = async({posts, setPosts}) => {\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\n//         .then(response => response.json())\n//         .then(result => {\n//         console.log(result.data.posts);\n//         setPosts(result.data.posts);\n//       })\n//       .catch(console.error);\n//       return (\n//         <>\n//           <h1>Posts</h1>\n//           <button type=\"button\" className=\"add-Btn\"\n//            onClick={handleAddPost}>Add Post</button>\n//           {\n//             posts.map(post => <div key={post._id}>  \n//               <h3>{post.title}</h3>\n//               <h3>{post.description}</h3>\n//               <h3>{post.price}</h3>\n//               <h3>{post.location}</h3>\n//               <h3>{post.willDeliver}</h3>\n//               <h3>{post.createdAt}</h3>\n//               <h3>{post.updatedAt}</h3>\n//             </div>)\n//           }\n//         </>\n//       )  \n// }\n//   const handleAddPost = () => {\n//     const [posts, setPosts] = useState([]);\n//     const [title, setTitle] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [location, setLocation] = useState(\"\");\n//     const [willDeliver, setWillDeliver] = useState(false);\n//     const postSubmit = async () => {\n//       const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'Application/json',\n//         'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\n//       },\n//       body: JSON.stringify({\n//         post: { // Is this right?\n//             title: title,\n//             description: description,\n//             price: price,\n//             location: location\n//               }\n//       })\n//     });\n//     const result = await response.json();\n//     const data_Posts = result.data.posts;\n//     setPosts(data_Posts);\n//     // View button here\n//     <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \n//     }\n//     return (\n//       <>\n//         <h3>Create Post</h3>\n//         <form onSubmit={postSubmit}>\n//           <input type=\"text\" placeholder = \"title\" value={title}\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \n//           <input type=\"text\" placeholder = \"description\" value={description}\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \n//           <input type=\"text\" placeholder = \"price\" value={price}\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\n//           <input type=\"text\" placeholder = \"location\" value={location}\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\n//           <input type=\"checkbox\" value=\"Deliver\"\n//            onClick = {() => setWillDeliver(true)}></input>\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \n//         </form>\n//       </>\n//     )\n//   }\n// export default AuthenticatedPosts;  \n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedPosts\");","map":{"version":3,"sources":["/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js"],"names":["React","useState","AuthenticatedPosts","posts","setPosts","useEffect","fetchPost","response","fetch","then","json","result","console","log","catch","error","data","map","post","location","willDeliver","message","active","_id","author","username","cohort","title","description","price","createdAt","updatedAt","_v","isAuthor"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst AuthenticatedPosts = () => {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n  \r\n    useEffect( () => {\r\n        const fetchPost = async () => {\r\n            const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    console.log(result);\r\n                })\r\n                .catch(console.error);\r\n            // const result = await response.json();\r\n            // console.log(result.data.posts);\r\n            setPosts(result.data.posts);\r\n        }\r\n        fetchPost();\r\n  }, [])\r\n  \r\n  return (\r\n    <>\r\n        <h1>Posts View</h1>\r\n        {posts.map((post) => (\r\n\r\n            <div key={post._id}>\r\n                 <p>{post.location}</p>\r\n                 <p>{post.willDeliver}</p>\r\n                 <p>{post.message}</p>\r\n\r\n                 <p>{post.active}</p>\r\n                 <p>{post._id}</p>\r\n                 <p>{post.author._id}</p>\r\n                 <p>{post.author.username}</p>\r\n\r\n                 <p>{post.cohort}</p>\r\n                 <p>{post.title}</p>\r\n                 <p>{post.description}</p>\r\n                 <p>{post.price}</p>\r\n                 <p>{post.createdAt}</p>\r\n                 <p>{post.updatedAt}</p>\r\n                 <p>{post._v}</p>\r\n                 <p>{post.isAuthor}</p>\r\n\r\n                 \r\n            </div>\r\n         \r\n        ))}\r\n\r\n    </>\r\n  )\r\n  }\r\n\r\n  export default AuthenticatedPosts;\r\n\r\n\r\n// import handleViewPost from '../helpers/handleViewPost';\r\n\r\n// const AuthenticatedPosts = async({posts, setPosts}) => {\r\n    \r\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n//         .then(response => response.json())\r\n//         .then(result => {\r\n//         console.log(result.data.posts);\r\n//         setPosts(result.data.posts);\r\n//       })\r\n//       .catch(console.error);\r\n    \r\n//       return (\r\n//         <>\r\n//           <h1>Posts</h1>\r\n          \r\n  \r\n//           <button type=\"button\" className=\"add-Btn\"\r\n//            onClick={handleAddPost}>Add Post</button>\r\n//           {\r\n//             posts.map(post => <div key={post._id}>  \r\n//               <h3>{post.title}</h3>\r\n//               <h3>{post.description}</h3>\r\n//               <h3>{post.price}</h3>\r\n//               <h3>{post.location}</h3>\r\n//               <h3>{post.willDeliver}</h3>\r\n//               <h3>{post.createdAt}</h3>\r\n//               <h3>{post.updatedAt}</h3>\r\n    \r\n//             </div>)\r\n//           }\r\n//         </>\r\n//       )  \r\n    \r\n// }\r\n\r\n\r\n\r\n//   const handleAddPost = () => {\r\n//     const [posts, setPosts] = useState([]);\r\n//     const [title, setTitle] = useState(\"\");\r\n//     const [description, setDescription] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [location, setLocation] = useState(\"\");\r\n//     const [willDeliver, setWillDeliver] = useState(false);\r\n  \r\n  \r\n//     const postSubmit = async () => {\r\n//       const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'Application/json',\r\n//         'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\r\n//       },\r\n//       body: JSON.stringify({\r\n//         post: { // Is this right?\r\n//             title: title,\r\n//             description: description,\r\n//             price: price,\r\n//             location: location\r\n//               }\r\n//       })\r\n//     });\r\n//     const result = await response.json();\r\n//     const data_Posts = result.data.posts;\r\n    \r\n//     setPosts(data_Posts);\r\n\r\n//     // View button here\r\n//     <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \r\n  \r\n//     }\r\n//     return (\r\n//       <>\r\n//         <h3>Create Post</h3>\r\n  \r\n//         <form onSubmit={postSubmit}>\r\n//           <input type=\"text\" placeholder = \"title\" value={title}\r\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \r\n  \r\n//           <input type=\"text\" placeholder = \"description\" value={description}\r\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \r\n  \r\n//           <input type=\"text\" placeholder = \"price\" value={price}\r\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\r\n  \r\n//           <input type=\"text\" placeholder = \"location\" value={location}\r\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\r\n  \r\n//           <input type=\"checkbox\" value=\"Deliver\"\r\n//            onClick = {() => setWillDeliver(true)}></input>\r\n  \r\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\r\n  \r\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \r\n  \r\n//         </form>\r\n//       </>\r\n//     )\r\n//   }\r\n\r\n// export default AuthenticatedPosts;  \r\n  "]},"metadata":{},"sourceType":"module"}