{"ast":null,"code":"var _jsxFileName = \"/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport handleAddPost from '../helpers/handleAddPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedPosts = _ref => {\n  _s();\n\n  let {\n    posts,\n    setPosts\n  } = _ref;\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\").then(response => response.json()).then(result => {\n        console.log(result.data.posts);\n        setPosts(result.data.posts);\n      }).catch(console.error);\n    };\n\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"add-Btn\",\n      onClick: handleAddPost,\n      children: \"Add Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Price: \", post.price]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Seller: \", post.author.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Location: \", post.location]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.willDeliver\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this)]\n    }, post._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true);\n};\n\n_s(AuthenticatedPosts, \"keSb34c5LLq/fQMteBIiyg2jHYk=\");\n\n_c = AuthenticatedPosts;\nexport default AuthenticatedPosts; // import handleViewPost from '../helpers/handleViewPost';\n// const AuthenticatedPosts = async({posts, setPosts}) => {\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\n//         .then(response => response.json())\n//         .then(result => {\n//         console.log(result.data.posts);\n//         setPosts(result.data.posts);\n//       })\n//       .catch(console.error);\n//       return (\n//         <>\n//           <h1>Posts</h1>\n//           <button type=\"button\" className=\"add-Btn\"\n//            onClick={handleAddPost}>Add Post</button>\n//           {\n//             posts.map(post => <div key={post._id}>  \n//               <h3>{post.title}</h3>\n//               <h3>{post.description}</h3>\n//               <h3>{post.price}</h3>\n//               <h3>{post.location}</h3>\n//               <h3>{post.willDeliver}</h3>\n//               <h3>{post.createdAt}</h3>\n//               <h3>{post.updatedAt}</h3>\n//             </div>)\n//           }\n//         </>\n//       )  \n// }\n//   const handleAddPost = () => {\n//     // const [posts, setPosts] = useState([]);\n//     const [title, setTitle] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [location, setLocation] = useState(\"\");\n//     const [willDeliver, setWillDeliver] = useState(false);\n// const postSubmit = async () => {\n//   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'Application/json',\n//     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\n//   },\n//   body: JSON.stringify({\n//     post: { // Is this right?\n//         title: title,\n//         description: description,\n//         price: price,\n//         location: location\n//           }\n//   })\n// });\n// const result = await response.json();\n// const data_Posts = result.data.posts;\n// setPosts(data_Posts);\n// // View button here\n// <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \n// }\n//     return (\n//       <>\n//         <h3>Create Post</h3>\n//         <form onSubmit={postSubmit}>\n//           <input type=\"text\" placeholder = \"title\" value={title}\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \n//           <input type=\"text\" placeholder = \"description\" value={description}\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \n//           <input type=\"text\" placeholder = \"price\" value={price}\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\n//           <input type=\"text\" placeholder = \"location\" value={location}\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\n//           <input type=\"checkbox\" value=\"Deliver\"\n//            onClick = {() => setWillDeliver(true)}></input>\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \n//         </form>\n//       </>\n//     )\n//   }\n// export default AuthenticatedPosts;  \n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedPosts\");","map":{"version":3,"sources":["/home/mayankawasthi/Strangers.Things/src/components/AuthenticatedPosts.js"],"names":["React","useState","useEffect","handleAddPost","AuthenticatedPosts","posts","setPosts","title","setTitle","description","setDescription","price","setPrice","location","setLocation","willDeliver","setWillDeliver","fetchPosts","response","fetch","then","json","result","console","log","data","catch","error","map","post","author","username","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport handleAddPost from '../helpers/handleAddPost';\r\n\r\nconst AuthenticatedPosts = ({posts, setPosts}) => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [willDeliver, setWillDeliver] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchPosts = async () => {\r\n            const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n                .then(response => response.json())\r\n                .then(result => {\r\n                    console.log(result.data.posts);\r\n                    setPosts(result.data.posts);\r\n                })\r\n                .catch(console.error);\r\n        }\r\n        fetchPosts();\r\n    }, [])\r\n    \r\n      return (\r\n        <>\r\n          <h1>Posts</h1>\r\n          \r\n          <button type=\"button\" className=\"add-Btn\"\r\n           onClick={handleAddPost}>Add Post</button>\r\n\r\n          {\r\n            posts.map((post) => (\r\n\r\n            <div key={post._id}>  \r\n              <h2>{post.title}</h2>\r\n              <p>{post.description}</p>\r\n              <h3>Price: {post.price}</h3>\r\n              <h3>Seller: {post.author.username}</h3>\r\n              <h3>Location: {post.location}</h3>\r\n              <h3>{post.willDeliver}</h3> <br></br>\r\n              {/* <h3>{post.createdAt}</h3>\r\n              <h3>{post.updatedAt}</h3> */}\r\n    \r\n            </div>)\r\n            )}\r\n        </>\r\n      )  \r\n    \r\n}\r\n\r\n  export default AuthenticatedPosts;\r\n\r\n\r\n// import handleViewPost from '../helpers/handleViewPost';\r\n\r\n// const AuthenticatedPosts = async({posts, setPosts}) => {\r\n    \r\n//         const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\")\r\n//         .then(response => response.json())\r\n//         .then(result => {\r\n//         console.log(result.data.posts);\r\n//         setPosts(result.data.posts);\r\n//       })\r\n//       .catch(console.error);\r\n    \r\n//       return (\r\n//         <>\r\n//           <h1>Posts</h1>\r\n          \r\n  \r\n//           <button type=\"button\" className=\"add-Btn\"\r\n//            onClick={handleAddPost}>Add Post</button>\r\n//           {\r\n//             posts.map(post => <div key={post._id}>  \r\n//               <h3>{post.title}</h3>\r\n//               <h3>{post.description}</h3>\r\n//               <h3>{post.price}</h3>\r\n//               <h3>{post.location}</h3>\r\n//               <h3>{post.willDeliver}</h3>\r\n//               <h3>{post.createdAt}</h3>\r\n//               <h3>{post.updatedAt}</h3>\r\n    \r\n//             </div>)\r\n//           }\r\n//         </>\r\n//       )  \r\n    \r\n// }\r\n\r\n\r\n\r\n//   const handleAddPost = () => {\r\n//     // const [posts, setPosts] = useState([]);\r\n//     const [title, setTitle] = useState(\"\");\r\n//     const [description, setDescription] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [location, setLocation] = useState(\"\");\r\n//     const [willDeliver, setWillDeliver] = useState(false);\r\n  \r\n  \r\n    // const postSubmit = async () => {\r\n    //   const response = await fetch(\"https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT/posts\", {\r\n    //   method: 'POST',\r\n    //   headers: {\r\n    //     'Content-Type': 'Application/json',\r\n    //     'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MWYzNWRjNWMxYTgyZDAwMTc3YTg0OTEiLCJ1c2VybmFtZSI6Ikphc29uIiwiaWF0IjoxNjQzMzM5MjA1fQ.bB63o6KaEkdrxNE_zu-0rWiWEudhwtd-qCOPJUoz2tA'\r\n    //   },\r\n    //   body: JSON.stringify({\r\n    //     post: { // Is this right?\r\n    //         title: title,\r\n    //         description: description,\r\n    //         price: price,\r\n    //         location: location\r\n    //           }\r\n    //   })\r\n    // });\r\n    // const result = await response.json();\r\n    // const data_Posts = result.data.posts;\r\n    \r\n    // setPosts(data_Posts);\r\n\r\n    // // View button here\r\n    // <button onClick={handleViewPost}>VIEW</button> // can I make handleViewPost as a component or function \r\n  \r\n    // }\r\n//     return (\r\n//       <>\r\n//         <h3>Create Post</h3>\r\n  \r\n//         <form onSubmit={postSubmit}>\r\n//           <input type=\"text\" placeholder = \"title\" value={title}\r\n//            onChange = {(event) => {setTitle(event.target.value)}}></input> \r\n  \r\n//           <input type=\"text\" placeholder = \"description\" value={description}\r\n//            onChange = {(event) => {setDescription(event.target.value)}}></input>  \r\n  \r\n//           <input type=\"text\" placeholder = \"price\" value={price}\r\n//            onChange = {(event) => {setPrice(event.target.value)}}></input>\r\n  \r\n//           <input type=\"text\" placeholder = \"location\" value={location}\r\n//            onChange = {(event) => {setLocation(event.target.value)}}></input>\r\n  \r\n//           <input type=\"checkbox\" value=\"Deliver\"\r\n//            onClick = {() => setWillDeliver(true)}></input>\r\n  \r\n//            <label for=\"willDeliver\">Willing to Deliver?</label> <br></br>\r\n  \r\n//            <button type=\"submit\" className=\"submitPost-Btn\">Submit</button>     \r\n  \r\n//         </form>\r\n//       </>\r\n//     )\r\n//   }\r\n\r\n// export default AuthenticatedPosts;  \r\n  "]},"metadata":{},"sourceType":"module"}